{"version":3,"sources":["components/AddCategoria.js","helpers/getGifs.js","components/GifGriditem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategoria","setCategories","useState","categoria","setCategoria","onSubmit","e","preventDefault","trim","length","cats","console","log","type","value","onChange","target","gitGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","id","title","images","downsized_medium","GifGriditem","className","src","alt","GifGrid","loading","hooks","sethooks","useEffect","then","useFetch","class","img","GiftExpert","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAIaA,EAAe,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEbC,mBAAS,IAFI,mBAExCC,EAFwC,KAE7BC,EAF6B,KAkB7C,OACI,sBAAMC,SAZY,SAACC,GACvBA,EAAEC,iBACCJ,EAAUK,OAAOC,OAAS,IAC1BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACvCN,EAAa,MAIhBO,QAAQC,IAAI,iBAIR,SACI,uBACIC,KAAK,OACLC,MAAUX,EACVY,SApBe,SAACT,GACxBF,EAAaE,EAAEU,OAAOF,a,+BCNjBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,0FAC6EC,UAAUH,GADvF,sBAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KACFC,EAAOD,EAAKE,KAAK,SAAAJ,GAAS,IAAD,EAC3B,MAAO,CACHK,GAAIL,EAAKK,GACTC,MAAON,EAAKM,MACZT,IAAG,UAAEG,EAAKO,cAAP,aAAE,EAAaC,iBAAiBX,QARxB,kBAYZM,GAZY,4CAAH,sDCAPM,EAAc,SAAC,GAAkB,IAAjBZ,EAAgB,EAAhBA,IAAKS,EAAW,EAAXA,MAC/B,OACI,mCACA,sBAAKI,UAAU,yCAAf,UACI,qBAAKC,IAAOd,EAAMe,IAAMN,IAC1B,4BAAKA,UCFDO,EAAU,SAAC,GAAkB,IAAhBlB,EAAe,EAAfA,SAAe,ECDjB,SAACA,GAAc,IAAD,EACRhB,mBAAS,CAC/BuB,KAAK,GACLY,SAAS,IAHqB,mBAC3BC,EAD2B,KACpBC,EADoB,KAclC,OARAC,qBAAU,WACNvB,EAAQC,GAAUuB,MAAK,SAAAlB,GACnBgB,EAAS,CACLd,KAAMF,EACNc,SAAS,SAGnB,CAACnB,IACIoB,EDX0BI,CAASxB,GAA7BY,EAFwB,EAE7BL,KAAaY,EAFgB,EAEhBA,QAEtB,OACI,qCACE,6BAAMnB,IACJmB,GAAW,mBAAIM,MAAM,mCAAV,qBACd,qBAAKV,UAAU,YAAf,SAGWH,EAAOH,KAAI,SAACiB,GAAD,OACR,cAAC,EAAD,eAEgBA,GADAA,EAAIhB,aEd7BiB,EAAa,WAAO,IAAD,EACQ3C,mBAAS,CAAC,cADlB,mBACrB4C,EADqB,KACT7C,EADS,KAU5B,OACM,qCACA,8CACC,cAAC,EAAD,CAAcA,cAAkBA,IACjC,uBAEA,6BAEK6C,EAAWnB,KAAI,SAAAT,GAAQ,OACvB,cAAC,EAAD,CAEKA,SAAaA,GADPA,Y,MCnB1B6B,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.dc1dc6d9.chunk.js","sourcesContent":["import React, { useState }  from \"react\";\nimport PropTypes from 'prop-types';\n\n\nexport const AddCategoria = ({setCategories}) => {\n\n  const [categoria, setCategoria] = useState('')\n  const handleAddInputChange = (e) => { \n        setCategoria(e.target.value)\n  }\n     \n  const handleAddSubmit = (e) => { \n    e.preventDefault();\n   if( categoria.trim().length > 2){\n       setCategories( cats => [ categoria, ...cats ]);\n       setCategoria(\" \")\n   }\n    \n\n    console.log('Submit hecho')\n  }         \n \n    return(\n        <form onSubmit = { handleAddSubmit }>\n            <input\n                type=\"text\"\n                value = { categoria } \n                onChange= { handleAddInputChange }\n             />\n        </form>\n    )\n \n\n\n}   \nAddCategoria.propTypes = {\n    setCategories:PropTypes.func.isRequired\n}","\n\nexport const gitGifs = async(category)=> {\n    const url = `https://api.giphy.com/v1/gifs/search?api_key=da8YCCsOcm8XpqCOUC65xaZNtZKnsbwG&q=${ encodeURI(category) }&limit=10`\n    const resp = await fetch(url);\n    const { data } = await resp.json();\n    const gifs = data.map( resp => {\n        return {\n            id: resp.id,\n            title: resp.title,\n            url :resp.images?.downsized_medium.url\n        }   \n    })\n\n    return gifs;\n}","import React from \"react\"\n\nexport const GifGriditem = ({url, title}) => {\n   return (\n       <>\n       <div className=\"card animate__animated animate__fadeIn\">\n           <img src ={ url } alt={ title } />\n         <p>{ title }</p>\n       </div>\n       </>\n   )\n\n}","import React  from \"react\"\nimport { useFetch } from \"../hooks/useFetchGifs\";\nimport { GifGriditem } from \"./GifGriditem\";\n\n\nexport const GifGrid = ({ category }) => {\n\n    const { data:images, loading } = useFetch(category);\n\n   return (\n       <>\n         <h3>{ category }</h3>\n         { loading && <p  class=\"animate__animated animate__flash\">Loading</p>  }\n        <div className=\"card-grid\">\n           \n                 {\n                   images.map((img) => \n                      <GifGriditem \n                                key= {img.id}\n                                 { ...img } />)\n                 }\n                \n           </div>\n       </>\n   )\n\n   \n\n}","import { useEffect, useState } from \"react\";\nimport { gitGifs } from \"../helpers/getGifs\";\n\n\nexport const useFetch = (category) => {\n    const [hooks, sethooks] = useState({\n        data:[],\n        loading: true\n    })\n    \n    useEffect(() => {\n        gitGifs(category).then(resp => {\n            sethooks({\n                data: resp,\n                loading: false  \n            })\n         })\n    },[category])  \n    return hooks;\n}","import React, { useState }  from \"react\";\nimport { AddCategoria } from \"./components/AddCategoria\";\nimport { GifGrid } from \"./components/GifGrid\";\n\nexport const GiftExpert = () => {\n    const [categories, setCategories] = useState(['One Punch']);\n     \n    //Si se desea agregar un nuevo valor a un arreglo se tiene que untilizar el setCategori del \n    //HUB \"useState\" para no mutar el arreglo en si \n   /* const handleAdd = () => {\n     //forma1 ==   setCategories( [...categories, 'fdsfds'] );\n      setCategories(cats => [ ...cats, 'Mario Bross' ] )\n    }\n    */\n    return (\n          <>\n          <h2>GifExpertApp</h2>\n           <AddCategoria setCategories = { setCategories }/>\n          <hr></hr>\n         \n          <ol>\n              {\n               categories.map(category =>  \n               <GifGrid\n                    key={ category }  \n                    category = { category }\n                /> )   \n              }    \n          </ol>\n\n          </>\n   ) \n\n}\n   \n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { GiftExpert } from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GiftExpert />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}